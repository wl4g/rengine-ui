import enLocale from "element-ui/lib/locale/lang/en"
const en_US = {
  message: {
    common: {
      profile: "Your profile",
      help: "Help",
      logout: "Sign out",
      home: "home",
      language: "Language",
      createDate: "CreateDate",
      createBy: "CreateBy",
      updateDate: "UpdateDate",
      updateBy: "UpdateBy",
      operation: "Operation",
      edit: "Edit",
      detail: "Detail",
      del: "Del",
      remark: "Remark",
      save: "Save",
      cancel: "Cancel",
      search: "Search",
      selectAll: "Select ALl",
      status: "Status",
      type: "Type",
      stop: "Stop",
      rollback: "Rollback",
      lastStep: "Last step",
      nextStep: "Next step",
      enable: "Enable",
      total: "Total",
      name: "Name",
      enName: "enName",
      displayName: "Display Name",
      baseUrl: "BaseUrl",
      username: "Username",
      password: "Password",
      sshKey: "SshKey",
      sshKeyPub: "SshKeyPub",
      token: "Token",
      addChild: "Add Child",
      addTop: "Add Top",
      add: "Add",
      create: "Create",
      icon: "Icon",
      sort: "Sort",
      group: "Group",
      email: "Email",
      phone: "Phone",
      refresh: "Refresh",
      endpoint: "Endpoint/Port",
      classify: "Classify",
      download: "Download",
      accessToken: "AccessToken",
      upload: "Upload",
      light: "Light",
      night: "Dark",
      back: "Back",
      owner: "Owner",
      manager: "Manager",
      startTime: "StartTime",
      endTime: "EndTime",
      searchInput: "Please input keyword",
    },
    monaco: {
      file: "File",
      edit: "Edit",
      running: "Running",
      terminal: "Terminal",
      help: "help",
      addDependencyLibrary: "Add dependency library",
      save: "Save",
      autoSave: "Auto Save",
      preferred: "Preferred",
      themes: "Themes",
      revoke: "Revoke",
      recover: "Recover",
      cut: "Cut",
      copy: "Copy",
      paste: "Paste",
      find: "Find",
      replace: "Replace",
      simulationStart: "Simulation Start",
      recentlyRun: "Recently Run",
      documentation: "Documentation",
      about: "About",
      rename: "Rename",
      delete: "Delete",
    },
    iam: {
      navEntryName: "Products and Services",
      menu: "Menu",
      contactPhone: "Contact Phone",
      address: "Address",
      permission: "permission",
      server: "Server",
      principal: "Principal",
      host: "Host",
      startTime: "StartTime",
      lastAccessTime: "LastAccessTime",
      clientRef: "ClientRef",
      authenticated: "Authenticated",
      destroy: "Destroy",
      roleCode: "RoleCode",
      role: "Role",
      pageLocation: "pageLocation",
      routePath: "routePath",
      contactChannel: "contactChannel",
      contactType: "ContactType",
      primaryAddress: "PrimaryAddress",
    },
    scm: {
      node: "Node",
      namespace: "Namespace",
      content: "Content",
      port: "Port",
      signature: "Signature",
      algorithm: "Algorithm",
      tag: "Tag",
    },
    share: {
      sshUser: "sshUser",
      sshKey: "sshKey",
      sshKeyPub: "sshKeyPub",
      timeOfFreq: "TimeOfFreq",
      numOfFreq: "NumOfFreq",
      dingtalk: "Dingtalk",
      wechat: "Wechat",
      twitter: "Twitter",
      facebook: "Facebook",
      key: "Key",
      label: "Label",
      labelEn: "LabelEn",
      value: "Value",
      theme: "Theme",
      connectTest: "connectTest",
      copy: "copy",
      generateSshKey: "generateSshKey",
    },
    srm: {
      level: "Level",
      keyword: "Keyword",
      flush: "Flush",
      filter: "Filter",
      include: "Include",
      policy: "Policy",
      relativeTime: "Relative Time",
      customTime: "CustomTime",
    },
    umc: {
      template: "Template",
      callbackUrl: "CallbackUrl",
      metric: "Metric",
      alarmTime: "AlarmTime",
      alarmNote: "AlarmNote",
      gatherTime: "GatherTime",
      rule: "Rule",
      logicalOperator: "LogicalOperator",
      aggregator: "Aggregator",
      relateOperator: "RelateOperator",
      queueTime: "QueueTime",
      alarmLevel: "AlarmLevel",
      compareValue: "CompareValue",
      dataSourceProvide: "DatasourceProvide",
      dataSourceUrl: "DataSourceUrl",
      dataSourceUserName: "DataSourceUserName",
      dataSourcePassword: "DataSourcePassword",
      alarmMessage: "AlarmMessage",
      dataSourceName: "DataSourceName",
      costTime: "CostTime(Ms)",
    },
    doc: {
      fileType: "FileType",
      description: "Description",
      history: "History",
      compare: "Compare",
      share: "Share",
      browse: "Browse",
      shareCode: "ShareCode",
      shareTime: "ShareTime",
      expireTime: "ExpireTime",
      docName: "Doc Name",
      withPasswordLink: "WithPasswordLink",
      withNoPasswordLink: "WithNoPasswordLink",
      cancelShare: "CancelShare",
    },
    coss: {
      fileSize: "FileSize",
      prefix: "Prefix",
      cossProvider: "CossProvider",
      acl: "ACL",
    },
  },
  elasticjob: {
    common: {
      home: "Home",
      menuData: [
        {
          title: "APP",
          child: [
            /* {
                          title: 'Registry center',
                          href: '/registry-center'
                        },*/
            {
              title: "Config",
              href: "/app-config",
            },
          ],
        },
        {
          title: "Job",
          child: [
            {
              title: "Config",
              href: "/job-config",
            },
            {
              title: "Status",
              href: "/job-status",
            },
          ],
        },
        {
          title: "Job history",
          child: [
            {
              title: "History dashboard",
              href: "/history-dashboard",
            },
            {
              title: "Job trace",
              href: "/history-trace",
            },
            {
              title: "History status",
              href: "/history-status",
            },
          ],
        },
      ],
      connected: "Connected",
      connection: "Connection",
      del: "Delete",
      notify: {
        title: "Prompt",
        addSucMessage: "Add Succeeded",
        editSucMessage: "Edit Succeeded",
        actionSucMessage: "Operation Succeeded",
        conSucMessage: "Connection Succeeded",
        conFailMessage: "Connection Failed",
        delSucMessage: "Delete Succeeded",
        delFailMessage: "Delete Failed",
        updateCompletedMessage: "Update Completed",
        updateFaildMessage: "Update Faild",
        appNotRegisterMessage: "App name is unregistered",
        confirmDelOperator: "Confirm delete",
      },
      loginOut: "Sign Out",
      dropdownList: [
        {
          title: "中文",
          command: "zh-CN",
        },
        {
          title: "English",
          command: "en-US",
        },
      ],
    },
    login: {
      btnTxt: "Login",
      labelUserName: "Username",
      labelPassword: "Password",
    },
    btn: {
      submit: "Submit",
      reset: "Reset",
      cancel: "Cancel",
      confirm: "Confirm",
    },
    input: {
      pUserName: "Please enter user name",
      pPaasword: "Please enter your password",
    },
    registryCenter: {
      btnTxt: "ADD",
      registDialog: {
        title: "Add a registry center",
        editTitle: "Edit registry center",
        name: "Name",
        centerType: "Instance Type",
        address: "Zookeeper address",
        orchestrationName: "Orchestration Name",
        namespaces: "Namespace",
        digest: "Digest",
        btnConfirmTxt: "Confirm",
        btnCancelTxt: "Cancel",
      },
      table: {
        operate: "Operate",
        operateConnect: "Connect",
        operateConnected: "Connected",
        operateDel: "Del",
        operateEdit: "Edit",
      },
      rules: {
        name: "Please enter the name of the registration center",
        address: "Please enter the registration center Address",
        namespaces: "Please enter a Namespace",
        centerType: "Please select a Center Type",
        orchestrationName: "Please enter a Orchestration Name",
        digest: "Please enter a digest",
      },
    },
    appConfig: {
      btnTxt: "ADD",
      addDialog: {
        title: "Add app",
        appName: "App name",
        script: "Bootstrap script",
        cpu: "CPU count",
        memory: "Memory(MB)",
        sampling: "Event trace sampling count",
        cacheEnable: "App cache enable",
        appURL: "App URL",
      },
      dialog: {
        editTitle: "Modify app",
        detailTitle: "App detail",
      },
      table: {
        appName: "App name",
        appUrl: "App URL",
        script: "Bootstrap script",
        operate: "Operate",
        operateDetail: "Detail",
        operateModify: "Update",
        operateDisable: "Disable",
        operateEnable: "Enable",
        operateDel: "Del",
      },
      rules: {
        appName: "Please input app name",
        appURL: "Please input app url",
        bootstrapScript: "Please input bootstrap script",
        cpuCount: "Please input cpu count",
        memoryMB: "Please input memory",
        eventTraceSamplingCount: "Please input event trace sampling count",
      },
      tips: {
        disableSuccess: "Disable Success",
        enableSuccess: "Enable Success",
      },
    },
    jobConfig: {
      labelInfo: {
        addBtnText: "ADD",
        jobName: "Job name",
        appName: "App name",
        shardingTotalCount: "Sharding total count",
        cron: "Crontab",
        description: "Description",
        status: "Status",
        jobExecutionType: "Execution type",
        jobParameter: "Job parameter",
        cpuCount: "CPU count",
        memoryMB: "Memory(MB)",
        failover: "Failover",
        misfire: "Misfire",
        applicationContext: "Application context",
        shardingItemParameters: "Sharding item parameters",
        scriptCommandLine: "Script command line",
        streamingProcess: "Streaming process",
        beanName: "Bean name",
        addTitle: "Add job",
        editTitle: "Update job",
        operate: "Operate",
      },
      rules: {
        jobName: "Please enter the Job name",
        appName: "Please input app name",
        jobExecutionType: "Please input Execution type",
        shardingTotalCount: "Please enter the Sharding total count",
        applicationContext: "Please input META-INF\\applicationContext.xml",
        shardingItemParameters: "Please input 0=a,1=b,2=c",
        cron: "Please enter the Crontab",
        cpuCount: "Please input CPU count",
        memoryMB: "Please input Memory(MB)",
        description: "Please enter the Description",
        status: "Please enter the Status",
      },
      statusText: {
        OK: "Enabled",
        DISABLED: "Disabled",
        CRASHED: "Crashed",
        PENDING: "Staging",
        SHARDING_FLAG: "SHARDING_FLAG",
      },
      actionText: {
        modify: "Update",
        detail: "Detail",
        trigger: "Trigger",
        disable: "Disable",
        enable: "Enable",
        shutdown: "Shutdown",
        remove: "Remove",
      },
    },
    jobStatus: {
      tab: {
        running: "Running tasks",
        ready: "Ready jobs",
        failover: "Failover tasks",
      },
      labelInfo: {
        id: "Task ID",
        taskName: "Task name",
        jobName: "Job name",
        severIp: "Server IP",
        type: "Job execution type",
        shardingItems: "Sharding item",
        times: "Remaining execution times",
        originalTaskId: "Original task ID",
        operate: "Operate",
      },
    },
    historyTrace: {
      column: {
        jobName: "Job name",
        taskId: "Task ID",
        serverIp: "Server IP",
        executeSource: "Execute source",
        executeResult: "Execute result",
        failureCause: "Failure reason",
        startTime: "Start time",
        completeTime: "Complete time",
      },
      searchForm: {
        jobName: "Job name",
        taskId: "Task ID",
        serverIp: "Server ip",
        startTime: "Start time",
        CompleteTime: "Complete time",
        executeResult: "Select execute result",
        executeSuccess: "Success",
        executeFailed: "Failure",
      },
    },
    historyStatus: {
      column: {
        jobName: "Job name",
        taskId: "Task ID",
        serverIp: "Server IP",
        executeSource: "Execute source",
        shardingItem: "Sharding item",
        executeType: "Execute type",
        state: "Status",
        createTime: "Creation time",
        remark: "Comments",
      },
      searchForm: {
        jobName: "Job name",
        taskId: "Task ID",
        serverIp: "Server IP",
        executeSource: "Execute source",
        executeType: "Execute type",
        startTime: "Creation start time",
        CompleteTime: "Creation end time",
        state: "Select state",
        stateStaging: "Staging",
        stateFailed: "Failed",
        stateFinished: "Finished",
        stateRunning: "Running",
        stateError: "Error",
        stateKilled: "Killed",
      },
    },
    historyDashboard: {
      successAndFailCount: "Success and failure count",
      jobType: "Job type",
      jobExecutionTypeJob: "execution type",
      jobTaskRunningCount: "Job and task running count",
      currentJobsCount: "Registry jobs count",
      jobInfoForOneMinute: "Job info for one minute",
      jobInfoForOneHour: "Job info for one hour",
      jobInfoForOneWeek: "Job info for one week",
      jobSuccessCount: "Job success count",
      jobFailureCount: "Job failure count",
      taskRunningCount: "Task running count",
      jobRunningCount: "Job running count",
      success: "Success",
      failed: "Failed",
    },
  },
  shardingsphere: {
    common: {
      home: "Home",
      menuData: [
        {
          title: "Governance",
          child: [
            {
              title: "Registry Center",
              href: "/registry-center",
            },
            {
              title: "Rule Config",
              href: "/rule-config",
            },
            {
              title: "Runtime Status",
              href: "/runtime-status",
            },
          ],
        },
        {
          title: "Data scaling",
          href: "/data-scaling",
        },
      ],
      connected: "Connected",
      connection: "Connection",
      del: "Delete",
      notify: {
        title: "Prompt",
        addSucMessage: "Add Succeeded",
        editSucMessage: "Edit Succeeded",
        conSucMessage: "Connection Succeeded",
        conFailMessage: "Connection Failed",
        delSucMessage: "Delete Succeeded",
        delFailMessage: "Delete Failed",
        updateCompletedMessage: "Update Completed",
        updateFaildMessage: "Update Faild",
        confirmDelOperator: "Confirm delete",
      },
      currentRegistryCenter: "Connected Registry Center",
      loginOut: "Sign Out",
      dropdownList: [
        {
          title: "中文",
          command: "zh-CN",
        },
        {
          title: "English",
          command: "en-US",
        },
      ],
    },
    login: {
      btnTxt: "Login",
      labelUserName: "Username",
      labelPassword: "Password",
    },
    btn: {
      submit: "Submit",
      reset: "Reset",
      cancel: "Cancel",
      confirm: "Confirm",
    },
    input: {
      pUserName: "Please enter user name",
      pPaasword: "Please enter your password",
    },
    registryCenter: {
      btnTxt: "ADD",
      registDialog: {
        title: "Add a registry center",
        editTitle: "Edit registry center",
        name: "Name",
        centerType: "Type",
        address: "Address",
        governanceName: "Governance Name",
        namespaces: "Namespace",
        digest: "Digest",
        btnConfirmTxt: "Confirm",
        btnCancelTxt: "Cancel",
      },
      table: {
        operate: "Operation",
        operateConnect: "Connect",
        operateConnected: "Connected",
        operateDel: "Delete",
        operateEdit: "Edit",
      },
      rules: {
        name: "Please enter the name of the registration center",
        address: "Please enter the registration center address",
        additionalAddress: "Please enter additional config center address",
        namespaces: "Please enter a namespace",
        centerType: "Please select a center type",
        governanceName: "Please enter a governance name",
        digest: "Please enter a digest",
      },
    },
    runtimeStatus: {
      serviceNode: "Service Node",
      readDataSourceName: "Read DataSource Info",
      dataSource: {
        schema: "Schema",
        writeDataSourceName: "Write DataSource Name",
        readDataSourceName: "Read DataSource Name",
      },
      instance: {
        instanceId: "Instance Id",
        serverIp: "Server Ip",
      },
      enabled: "Enabled",
    },
    ruleConfig: {
      form: {
        inputPlaceholder: "Please enter content",
      },
      schema: {
        title: "Add Schema",
        name: "Name",
        ruleConfig: "Rule Config",
        dataSourceConfig: "Data Source Config",
        metadataConfig: "Metadata Config",
      },
      schemaRules: {
        name: "Please enter the name of the schema",
        ruleConfig: "Please enter the rule config of the schema",
        dataSourceConfig: "Please enter the data source config of the schema",
        metadataConfig: "Please enter the metadata config of the schema",
      },
      radioBtn: {
        schema: "Schema",
        authentication: "Authentication",
        props: "Props",
      },
    },
    dataScaling: {
      btnTxt: "ADD",
      tableList: {
        jobId: "Job Id",
        jobName: "Job Name",
        status: "Status",
        operate: "Operation",
        operateStop: "stop",
        operateSee: "see",
      },
      registDialog: {
        title: "Add a job",
        source: "Source",
        target: "Target",
        jobCount: "JobCount",
        jobCountPlaceholder: "Please enter jobCount",
        username: "Username",
        usernamePlaceholder: "Please enter username",
        password: "Password",
        passwordPlaceholder: "Please enter password",
        url: "Url",
        urlPlaceholder: "Please enter url",
        btnConfirmTxt: "Confirm",
        btnCancelTxt: "Cancel",
      },
      rules: {
        source: "Please select the source of the registration center",
        target: "Please select a target",
        serviceUrl: "ServiceUrl must fill",
      },
      notify: {
        title: "Prompt",
        conSucMessage: "Add Succeeded",
        conFailMessage: "Add Failed",
        delSucMessage: "Delete Succeeded",
        delFailMessage: "Delete Failed",
      },
      serviceDialog: {
        title: "Data Scaling Setting",
        serviceName: "Service Name",
        serviceUrl: "Service Url",
        serviceNamePlaceholder: "Please enter serviceName",
        serviceUrlPlaceholder: "Please enter serviceUrl",
      },
      detail: {
        inventory: "Inventory",
        increment: "Increment",
        taskId: "Sub Task Id",
        shardingItem: "Sharding Item",
        delay: "Delay(seconds)",
        total: "Total Tasks",
        finished: "Finished Tasks",
      },
    },
  },
  ...enLocale,
}

export default en_US
